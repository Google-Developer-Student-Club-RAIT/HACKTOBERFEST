#Print the pattern as shown below:
Input: n
Output: Pattern

#Example:
n=5
    *
   * *
  *   *
 *     *
*       *
*       *
 *     *
  *   *
   * *
    *
// Enter your code here.


// C Program To Print Hollow Diamond

#include <stdio.h>
int main()
{
    int n = 5, i, j;
    for (i = 1; i <= n; i++) 
    {
        for (j = n; j > i; j--)
        {
            printf(" ");
        }
        printf("*");

        for (j = 1; j < (i - 1) * 2; j++)
        {
            printf(" ");
        }
        if (i == 1)
        {
            printf("\n");
        }
        else
        {
            printf("*\n");
        }
    }

    for (i = n - 1; i >= 1; i--)
    {
        for (j = n; j > i; j--) 
        {
            printf(" ");
        }
 
 
        printf("*");
        for (j = 1; j < (i - 1) * 2;
             j++) {
            printf(" ");
        }
        if (i == 1) {
            printf("\n");
        }
        else {
            printf("*\n");
        }
    }
    return 0;
}

// Hollow Diamond using Java
public class HollowDiamond
{
public static void printPattern(int n)
{
    int i,j,mid;
    if(n%2==1)
      n++;
    mid = n/2;
    
    for(i = 1; i<= mid; i++) 
    {
      for(j = 1; j<=mid-i; j++) 
         System.out.print(" ");
           
      if(i == 1) 
      {
         System.out.print("*");
      }
      else
      {
         System.out.print("*"); 
         for(j = 1; j<=2*i-3; j++) 
         { 
            System.out.print(" ");
         }
         System.out.print("*");
      }
      for(j = 1; j<=mid-i; j++) 
      {
          
         System.out.print(" ");
      }     
      System.out.println();
    }
     
   
    for(i = mid+1; i<n; i++) 
    {
         
      for(j = 1; j<=i-mid; j++) 
      {
         System.out.print(" ");
      }
           
      if(i == n-1) {
         System.out.print("*");
      }else{
         System.out.print("*"); 
         for(j = 1; j<=2*(n - i)-3; j++) 
         { 
            System.out.print(" ");
         }
         System.out.print("*");
      }
      for(j = 1; j<=i-mid; j++) 
      {
         System.out.print(" ");
      }
           
      System.out.println();
   }  
}
    public static void main(String args[])
    {
        int n = 7;
        printPattern(n);
    }
}
 
